/*
XingChen 开放接口定义

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xingchen

import (
	"encoding/json"
)

// checks if the CharacterAdvancedConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharacterAdvancedConfig{}

// CharacterAdvancedConfig 角色高级配置
type CharacterAdvancedConfig struct {
	ModelConfig    *ModelConfig    `json:"modelConfig,omitempty"`
	RepositoryInfo *RepositoryInfo `json:"repositoryInfo,omitempty"`
	// 是否返回真实世界信息
	IsRealInfo *bool `json:"isRealInfo,omitempty"`
	// web搜索必填关键字
	SearchKeyword *string `json:"searchKeyword,omitempty"`
	// 是否允许角色发送图片
	AllowSendImage *bool `json:"allowSendImage,omitempty"`
	// 角色发送图片的风格
	ImageStyle *string `json:"imageStyle,omitempty"`
	// 是否允许角色发送语音
	AllowSendAsr *bool `json:"allowSendAsr,omitempty"`
	// 角色发送语音风格
	AsrStyle *string `json:"asrStyle,omitempty"`
	// 对话介绍
	ChatDescription      *string `json:"chatDescription,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CharacterAdvancedConfig CharacterAdvancedConfig

// NewCharacterAdvancedConfig instantiates a new CharacterAdvancedConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharacterAdvancedConfig() *CharacterAdvancedConfig {
	this := CharacterAdvancedConfig{}
	return &this
}

// NewCharacterAdvancedConfigWithDefaults instantiates a new CharacterAdvancedConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharacterAdvancedConfigWithDefaults() *CharacterAdvancedConfig {
	this := CharacterAdvancedConfig{}
	return &this
}

// GetModelConfig returns the ModelConfig field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetModelConfig() ModelConfig {
	if o == nil || IsNil(o.ModelConfig) {
		var ret ModelConfig
		return ret
	}
	return *o.ModelConfig
}

// GetModelConfigOk returns a tuple with the ModelConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetModelConfigOk() (*ModelConfig, bool) {
	if o == nil || IsNil(o.ModelConfig) {
		return nil, false
	}
	return o.ModelConfig, true
}

// HasModelConfig returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasModelConfig() bool {
	if o != nil && !IsNil(o.ModelConfig) {
		return true
	}

	return false
}

// SetModelConfig gets a reference to the given ModelConfig and assigns it to the ModelConfig field.
func (o *CharacterAdvancedConfig) SetModelConfig(v ModelConfig) {
	o.ModelConfig = &v
}

// GetRepositoryInfo returns the RepositoryInfo field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetRepositoryInfo() RepositoryInfo {
	if o == nil || IsNil(o.RepositoryInfo) {
		var ret RepositoryInfo
		return ret
	}
	return *o.RepositoryInfo
}

// GetRepositoryInfoOk returns a tuple with the RepositoryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetRepositoryInfoOk() (*RepositoryInfo, bool) {
	if o == nil || IsNil(o.RepositoryInfo) {
		return nil, false
	}
	return o.RepositoryInfo, true
}

// HasRepositoryInfo returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasRepositoryInfo() bool {
	if o != nil && !IsNil(o.RepositoryInfo) {
		return true
	}

	return false
}

// SetRepositoryInfo gets a reference to the given RepositoryInfo and assigns it to the RepositoryInfo field.
func (o *CharacterAdvancedConfig) SetRepositoryInfo(v RepositoryInfo) {
	o.RepositoryInfo = &v
}

// GetIsRealInfo returns the IsRealInfo field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetIsRealInfo() bool {
	if o == nil || IsNil(o.IsRealInfo) {
		var ret bool
		return ret
	}
	return *o.IsRealInfo
}

// GetIsRealInfoOk returns a tuple with the IsRealInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetIsRealInfoOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRealInfo) {
		return nil, false
	}
	return o.IsRealInfo, true
}

// HasIsRealInfo returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasIsRealInfo() bool {
	if o != nil && !IsNil(o.IsRealInfo) {
		return true
	}

	return false
}

// SetIsRealInfo gets a reference to the given bool and assigns it to the IsRealInfo field.
func (o *CharacterAdvancedConfig) SetIsRealInfo(v bool) {
	o.IsRealInfo = &v
}

// GetSearchKeyword returns the SearchKeyword field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetSearchKeyword() string {
	if o == nil || IsNil(o.SearchKeyword) {
		var ret string
		return ret
	}
	return *o.SearchKeyword
}

// GetSearchKeywordOk returns a tuple with the SearchKeyword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetSearchKeywordOk() (*string, bool) {
	if o == nil || IsNil(o.SearchKeyword) {
		return nil, false
	}
	return o.SearchKeyword, true
}

// HasSearchKeyword returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasSearchKeyword() bool {
	if o != nil && !IsNil(o.SearchKeyword) {
		return true
	}

	return false
}

// SetSearchKeyword gets a reference to the given string and assigns it to the SearchKeyword field.
func (o *CharacterAdvancedConfig) SetSearchKeyword(v string) {
	o.SearchKeyword = &v
}

// GetAllowSendImage returns the AllowSendImage field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetAllowSendImage() bool {
	if o == nil || IsNil(o.AllowSendImage) {
		var ret bool
		return ret
	}
	return *o.AllowSendImage
}

// GetAllowSendImageOk returns a tuple with the AllowSendImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetAllowSendImageOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSendImage) {
		return nil, false
	}
	return o.AllowSendImage, true
}

// HasAllowSendImage returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasAllowSendImage() bool {
	if o != nil && !IsNil(o.AllowSendImage) {
		return true
	}

	return false
}

// SetAllowSendImage gets a reference to the given bool and assigns it to the AllowSendImage field.
func (o *CharacterAdvancedConfig) SetAllowSendImage(v bool) {
	o.AllowSendImage = &v
}

// GetImageStyle returns the ImageStyle field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetImageStyle() string {
	if o == nil || IsNil(o.ImageStyle) {
		var ret string
		return ret
	}
	return *o.ImageStyle
}

// GetImageStyleOk returns a tuple with the ImageStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetImageStyleOk() (*string, bool) {
	if o == nil || IsNil(o.ImageStyle) {
		return nil, false
	}
	return o.ImageStyle, true
}

// HasImageStyle returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasImageStyle() bool {
	if o != nil && !IsNil(o.ImageStyle) {
		return true
	}

	return false
}

// SetImageStyle gets a reference to the given string and assigns it to the ImageStyle field.
func (o *CharacterAdvancedConfig) SetImageStyle(v string) {
	o.ImageStyle = &v
}

// GetAllowSendAsr returns the AllowSendAsr field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetAllowSendAsr() bool {
	if o == nil || IsNil(o.AllowSendAsr) {
		var ret bool
		return ret
	}
	return *o.AllowSendAsr
}

// GetAllowSendAsrOk returns a tuple with the AllowSendAsr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetAllowSendAsrOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSendAsr) {
		return nil, false
	}
	return o.AllowSendAsr, true
}

// HasAllowSendAsr returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasAllowSendAsr() bool {
	if o != nil && !IsNil(o.AllowSendAsr) {
		return true
	}

	return false
}

// SetAllowSendAsr gets a reference to the given bool and assigns it to the AllowSendAsr field.
func (o *CharacterAdvancedConfig) SetAllowSendAsr(v bool) {
	o.AllowSendAsr = &v
}

// GetAsrStyle returns the AsrStyle field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetAsrStyle() string {
	if o == nil || IsNil(o.AsrStyle) {
		var ret string
		return ret
	}
	return *o.AsrStyle
}

// GetAsrStyleOk returns a tuple with the AsrStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetAsrStyleOk() (*string, bool) {
	if o == nil || IsNil(o.AsrStyle) {
		return nil, false
	}
	return o.AsrStyle, true
}

// HasAsrStyle returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasAsrStyle() bool {
	if o != nil && !IsNil(o.AsrStyle) {
		return true
	}

	return false
}

// SetAsrStyle gets a reference to the given string and assigns it to the AsrStyle field.
func (o *CharacterAdvancedConfig) SetAsrStyle(v string) {
	o.AsrStyle = &v
}

// GetChatDescription returns the ChatDescription field value if set, zero value otherwise.
func (o *CharacterAdvancedConfig) GetChatDescription() string {
	if o == nil || IsNil(o.ChatDescription) {
		var ret string
		return ret
	}
	return *o.ChatDescription
}

// GetChatDescriptionOk returns a tuple with the ChatDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterAdvancedConfig) GetChatDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ChatDescription) {
		return nil, false
	}
	return o.ChatDescription, true
}

// HasChatDescription returns a boolean if a field has been set.
func (o *CharacterAdvancedConfig) HasChatDescription() bool {
	if o != nil && !IsNil(o.ChatDescription) {
		return true
	}

	return false
}

// SetChatDescription gets a reference to the given string and assigns it to the ChatDescription field.
func (o *CharacterAdvancedConfig) SetChatDescription(v string) {
	o.ChatDescription = &v
}

func (o CharacterAdvancedConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharacterAdvancedConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ModelConfig) {
		toSerialize["modelConfig"] = o.ModelConfig
	}
	if !IsNil(o.RepositoryInfo) {
		toSerialize["repositoryInfo"] = o.RepositoryInfo
	}
	if !IsNil(o.IsRealInfo) {
		toSerialize["isRealInfo"] = o.IsRealInfo
	}
	if !IsNil(o.SearchKeyword) {
		toSerialize["searchKeyword"] = o.SearchKeyword
	}
	if !IsNil(o.AllowSendImage) {
		toSerialize["allowSendImage"] = o.AllowSendImage
	}
	if !IsNil(o.ImageStyle) {
		toSerialize["imageStyle"] = o.ImageStyle
	}
	if !IsNil(o.AllowSendAsr) {
		toSerialize["allowSendAsr"] = o.AllowSendAsr
	}
	if !IsNil(o.AsrStyle) {
		toSerialize["asrStyle"] = o.AsrStyle
	}
	if !IsNil(o.ChatDescription) {
		toSerialize["chatDescription"] = o.ChatDescription
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CharacterAdvancedConfig) UnmarshalJSON(bytes []byte) (err error) {
	varCharacterAdvancedConfig := _CharacterAdvancedConfig{}

	err = json.Unmarshal(bytes, &varCharacterAdvancedConfig)

	if err != nil {
		return err
	}

	*o = CharacterAdvancedConfig(varCharacterAdvancedConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "modelConfig")
		delete(additionalProperties, "repositoryInfo")
		delete(additionalProperties, "isRealInfo")
		delete(additionalProperties, "searchKeyword")
		delete(additionalProperties, "allowSendImage")
		delete(additionalProperties, "imageStyle")
		delete(additionalProperties, "allowSendAsr")
		delete(additionalProperties, "asrStyle")
		delete(additionalProperties, "chatDescription")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCharacterAdvancedConfig struct {
	value *CharacterAdvancedConfig
	isSet bool
}

func (v NullableCharacterAdvancedConfig) Get() *CharacterAdvancedConfig {
	return v.value
}

func (v *NullableCharacterAdvancedConfig) Set(val *CharacterAdvancedConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCharacterAdvancedConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCharacterAdvancedConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharacterAdvancedConfig(val *CharacterAdvancedConfig) *NullableCharacterAdvancedConfig {
	return &NullableCharacterAdvancedConfig{value: val, isSet: true}
}

func (v NullableCharacterAdvancedConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharacterAdvancedConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
