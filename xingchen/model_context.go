/*
XingChen 开放接口定义

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xingchen

import (
	"encoding/json"
)

// checks if the Context type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Context{}

// Context struct for Context
type Context struct {
	ChatRoomId           *int64  `json:"chatRoomId,omitempty"`
	SessionId            *string `json:"sessionId,omitempty"`
	ChatId               *string `json:"chatId,omitempty"`
	AnswerId             *string `json:"messageId,omitempty"`
	QueryId              *string `json:"replyMessageId,omitempty"`
	EnableDataInspection *bool   `json:"enableDataInspection,omitempty"`
	IsSave               *bool   `json:"isSave,omitempty"`
	RequestId            *string `json:"requestId,omitempty"`
	ModelRequestId       *string `json:"modelRequestId,omitempty"`
	CharacterPk          *int64  `json:"characterPk,omitempty"`
	ModelName            *string `json:"modelName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Context Context

// NewContext instantiates a new Context object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContext() *Context {
	this := Context{}
	return &this
}

// NewContextWithDefaults instantiates a new Context object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContextWithDefaults() *Context {
	this := Context{}
	return &this
}

// GetChatRoomId returns the ChatRoomId field value if set, zero value otherwise.
func (o *Context) GetChatRoomId() int64 {
	if o == nil || IsNil(o.ChatRoomId) {
		var ret int64
		return ret
	}
	return *o.ChatRoomId
}

// GetChatRoomIdOk returns a tuple with the ChatRoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetChatRoomIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ChatRoomId) {
		return nil, false
	}
	return o.ChatRoomId, true
}

// HasChatRoomId returns a boolean if a field has been set.
func (o *Context) HasChatRoomId() bool {
	if o != nil && !IsNil(o.ChatRoomId) {
		return true
	}

	return false
}

// SetChatRoomId gets a reference to the given int64 and assigns it to the ChatRoomId field.
func (o *Context) SetChatRoomId(v int64) {
	o.ChatRoomId = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *Context) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *Context) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *Context) SetSessionId(v string) {
	o.SessionId = &v
}

// GetChatId returns the ChatId field value if set, zero value otherwise.
func (o *Context) GetChatId() string {
	if o == nil || IsNil(o.ChatId) {
		var ret string
		return ret
	}
	return *o.ChatId
}

// GetChatIdOk returns a tuple with the ChatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetChatIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChatId) {
		return nil, false
	}
	return o.ChatId, true
}

// HasChatId returns a boolean if a field has been set.
func (o *Context) HasChatId() bool {
	if o != nil && !IsNil(o.ChatId) {
		return true
	}

	return false
}

// SetChatId gets a reference to the given string and assigns it to the ChatId field.
func (o *Context) SetChatId(v string) {
	o.ChatId = &v
}

// GetMessageId returns the AnswerId field value if set, zero value otherwise.
func (o *Context) GetMessageId() string {
	if o == nil || IsNil(o.AnswerId) {
		var ret string
		return ret
	}
	return *o.AnswerId
}

// GetMessageIdOk returns a tuple with the AnswerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.AnswerId) {
		return nil, false
	}
	return o.AnswerId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *Context) HasMessageId() bool {
	if o != nil && !IsNil(o.AnswerId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the AnswerId field.
func (o *Context) SetMessageId(v string) {
	o.AnswerId = &v
}

// GetReplyMessageId returns the QueryId field value if set, zero value otherwise.
func (o *Context) GetReplyMessageId() string {
	if o == nil || IsNil(o.QueryId) {
		var ret string
		return ret
	}
	return *o.QueryId
}

// GetReplyMessageIdOk returns a tuple with the QueryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetReplyMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.QueryId) {
		return nil, false
	}
	return o.QueryId, true
}

// HasReplyMessageId returns a boolean if a field has been set.
func (o *Context) HasReplyMessageId() bool {
	if o != nil && !IsNil(o.QueryId) {
		return true
	}

	return false
}

// SetReplyMessageId gets a reference to the given string and assigns it to the QueryId field.
func (o *Context) SetReplyMessageId(v string) {
	o.QueryId = &v
}

// GetEnableDataInspection returns the EnableDataInspection field value if set, zero value otherwise.
func (o *Context) GetEnableDataInspection() bool {
	if o == nil || IsNil(o.EnableDataInspection) {
		var ret bool
		return ret
	}
	return *o.EnableDataInspection
}

// GetEnableDataInspectionOk returns a tuple with the EnableDataInspection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetEnableDataInspectionOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDataInspection) {
		return nil, false
	}
	return o.EnableDataInspection, true
}

// HasEnableDataInspection returns a boolean if a field has been set.
func (o *Context) HasEnableDataInspection() bool {
	if o != nil && !IsNil(o.EnableDataInspection) {
		return true
	}

	return false
}

// SetEnableDataInspection gets a reference to the given bool and assigns it to the EnableDataInspection field.
func (o *Context) SetEnableDataInspection(v bool) {
	o.EnableDataInspection = &v
}

// GetIsSave returns the IsSave field value if set, zero value otherwise.
func (o *Context) GetIsSave() bool {
	if o == nil || IsNil(o.IsSave) {
		var ret bool
		return ret
	}
	return *o.IsSave
}

// GetIsSaveOk returns a tuple with the IsSave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetIsSaveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSave) {
		return nil, false
	}
	return o.IsSave, true
}

// HasIsSave returns a boolean if a field has been set.
func (o *Context) HasIsSave() bool {
	if o != nil && !IsNil(o.IsSave) {
		return true
	}

	return false
}

// SetIsSave gets a reference to the given bool and assigns it to the IsSave field.
func (o *Context) SetIsSave(v bool) {
	o.IsSave = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *Context) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *Context) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *Context) SetRequestId(v string) {
	o.RequestId = &v
}

// GetModelRequestId returns the ModelRequestId field value if set, zero value otherwise.
func (o *Context) GetModelRequestId() string {
	if o == nil || IsNil(o.ModelRequestId) {
		var ret string
		return ret
	}
	return *o.ModelRequestId
}

// GetModelRequestIdOk returns a tuple with the ModelRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetModelRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelRequestId) {
		return nil, false
	}
	return o.ModelRequestId, true
}

// HasModelRequestId returns a boolean if a field has been set.
func (o *Context) HasModelRequestId() bool {
	if o != nil && !IsNil(o.ModelRequestId) {
		return true
	}

	return false
}

// SetModelRequestId gets a reference to the given string and assigns it to the ModelRequestId field.
func (o *Context) SetModelRequestId(v string) {
	o.ModelRequestId = &v
}

// GetCharacterPk returns the CharacterPk field value if set, zero value otherwise.
func (o *Context) GetCharacterPk() int64 {
	if o == nil || IsNil(o.CharacterPk) {
		var ret int64
		return ret
	}
	return *o.CharacterPk
}

// GetCharacterPkOk returns a tuple with the CharacterPk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetCharacterPkOk() (*int64, bool) {
	if o == nil || IsNil(o.CharacterPk) {
		return nil, false
	}
	return o.CharacterPk, true
}

// HasCharacterPk returns a boolean if a field has been set.
func (o *Context) HasCharacterPk() bool {
	if o != nil && !IsNil(o.CharacterPk) {
		return true
	}

	return false
}

// SetCharacterPk gets a reference to the given int64 and assigns it to the CharacterPk field.
func (o *Context) SetCharacterPk(v int64) {
	o.CharacterPk = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *Context) GetModelName() string {
	if o == nil || IsNil(o.ModelName) {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModelName) {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *Context) HasModelName() bool {
	if o != nil && !IsNil(o.ModelName) {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *Context) SetModelName(v string) {
	o.ModelName = &v
}

func (o Context) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Context) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChatRoomId) {
		toSerialize["chatRoomId"] = o.ChatRoomId
	}
	if !IsNil(o.SessionId) {
		toSerialize["sessionId"] = o.SessionId
	}
	if !IsNil(o.ChatId) {
		toSerialize["chatId"] = o.ChatId
	}
	if !IsNil(o.AnswerId) {
		toSerialize["messageId"] = o.AnswerId
	}
	if !IsNil(o.QueryId) {
		toSerialize["replyMessageId"] = o.QueryId
	}
	if !IsNil(o.EnableDataInspection) {
		toSerialize["enableDataInspection"] = o.EnableDataInspection
	}
	if !IsNil(o.IsSave) {
		toSerialize["isSave"] = o.IsSave
	}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if !IsNil(o.ModelRequestId) {
		toSerialize["modelRequestId"] = o.ModelRequestId
	}
	if !IsNil(o.CharacterPk) {
		toSerialize["characterPk"] = o.CharacterPk
	}
	if !IsNil(o.ModelName) {
		toSerialize["modelName"] = o.ModelName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Context) UnmarshalJSON(bytes []byte) (err error) {
	varContext := _Context{}

	err = json.Unmarshal(bytes, &varContext)

	if err != nil {
		return err
	}

	*o = Context(varContext)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "chatRoomId")
		delete(additionalProperties, "sessionId")
		delete(additionalProperties, "chatId")
		delete(additionalProperties, "messageId")
		delete(additionalProperties, "replyMessageId")
		delete(additionalProperties, "enableDataInspection")
		delete(additionalProperties, "isSave")
		delete(additionalProperties, "requestId")
		delete(additionalProperties, "modelRequestId")
		delete(additionalProperties, "characterPk")
		delete(additionalProperties, "modelName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableContext struct {
	value *Context
	isSet bool
}

func (v NullableContext) Get() *Context {
	return v.value
}

func (v *NullableContext) Set(val *Context) {
	v.value = val
	v.isSet = true
}

func (v NullableContext) IsSet() bool {
	return v.isSet
}

func (v *NullableContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContext(val *Context) *NullableContext {
	return &NullableContext{value: val, isSet: true}
}

func (v NullableContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
