/*
XingChen 开放接口定义

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xingchen

import (
	"encoding/json"
)

// checks if the GatewayIssuedParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayIssuedParams{}

// GatewayIssuedParams struct for GatewayIssuedParams
type GatewayIssuedParams struct {
	UserInfo             *map[string]string `json:"userInfo,omitempty"`
	Context              *GatewayContext    `json:"context,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayIssuedParams GatewayIssuedParams

// NewGatewayIssuedParams instantiates a new GatewayIssuedParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayIssuedParams() *GatewayIssuedParams {
	this := GatewayIssuedParams{}
	return &this
}

// NewGatewayIssuedParamsWithDefaults instantiates a new GatewayIssuedParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayIssuedParamsWithDefaults() *GatewayIssuedParams {
	this := GatewayIssuedParams{}
	return &this
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *GatewayIssuedParams) GetUserInfo() map[string]string {
	if o == nil || IsNil(o.UserInfo) {
		var ret map[string]string
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayIssuedParams) GetUserInfoOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UserInfo) {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *GatewayIssuedParams) HasUserInfo() bool {
	if o != nil && !IsNil(o.UserInfo) {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given map[string]string and assigns it to the UserInfo field.
func (o *GatewayIssuedParams) SetUserInfo(v map[string]string) {
	o.UserInfo = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *GatewayIssuedParams) GetContext() GatewayContext {
	if o == nil || IsNil(o.Context) {
		var ret GatewayContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayIssuedParams) GetContextOk() (*GatewayContext, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *GatewayIssuedParams) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given GatewayContext and assigns it to the Context field.
func (o *GatewayIssuedParams) SetContext(v GatewayContext) {
	o.Context = &v
}

func (o GatewayIssuedParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayIssuedParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserInfo) {
		toSerialize["userInfo"] = o.UserInfo
	}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayIssuedParams) UnmarshalJSON(bytes []byte) (err error) {
	varGatewayIssuedParams := _GatewayIssuedParams{}

	err = json.Unmarshal(bytes, &varGatewayIssuedParams)

	if err != nil {
		return err
	}

	*o = GatewayIssuedParams(varGatewayIssuedParams)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "userInfo")
		delete(additionalProperties, "context")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayIssuedParams struct {
	value *GatewayIssuedParams
	isSet bool
}

func (v NullableGatewayIssuedParams) Get() *GatewayIssuedParams {
	return v.value
}

func (v *NullableGatewayIssuedParams) Set(val *GatewayIssuedParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayIssuedParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayIssuedParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayIssuedParams(val *GatewayIssuedParams) *NullableGatewayIssuedParams {
	return &NullableGatewayIssuedParams{value: val, isSet: true}
}

func (v NullableGatewayIssuedParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayIssuedParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
