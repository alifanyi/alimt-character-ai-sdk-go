/*
XingChen 开放接口定义

Testing ChatMessageApiSubService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package xingchen

import (
	openapiclient "alimt-character-ai-sdk-go/xingchen"
	"context"
	"testing"
)

func Test_xingchen_ChatMessageApiSubService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	configuration.Version = openapiclient.V2
	apiClient := openapiclient.NewAPIClient(configuration)

	bearer := "xxx"
	ctx := context.WithValue(context.Background(), openapiclient.ContextAccessToken, bearer)

	t.Run("Test ChatMessageApiSubService ChatHistories", func(t *testing.T) {

		//t.Skip("skip test") // remove to run test

		chatHistoryQueryDTO := openapiclient.ChatHistoryQueryDTO{
			Where: &openapiclient.ChatHistoryQueryWhere{
				CharacterId: openapiclient.PtrString("xxx"),
				BizUserId:   openapiclient.PtrString("1234"),
				MessageIds: []string{
					"xxx",
				},
			},
			PageSize: openapiclient.PtrInt32(10),
		}

		resp, httpRes, err := apiClient.ChatMessageApiSub.ChatHistories(ctx).ChatHistoryQueryDTO(chatHistoryQueryDTO).Execute()

		if err != nil {
			t.Error()
		}
		if resp == nil {
			t.Error()
		}
		if httpRes.StatusCode != 200 {
			t.Error()
		}
	})

	t.Run("Test ChatMessageApiSubService RateMessage", func(t *testing.T) {

		//t.Skip("skip test") // remove to run test

		messageRatingRequest := openapiclient.MessageRatingRequest{
			MessageId: "xxx",
			Rating:    0,
		}

		resp, httpRes, err := apiClient.ChatMessageApiSub.RateMessage(ctx).MessageRatingRequest(messageRatingRequest).Execute()

		if err != nil {
			t.Error()
		}
		if resp == nil {
			t.Error()
		}
		if httpRes.StatusCode != 200 {
			t.Error()
		}
	})

	t.Run("Test ChatMessageApiSubService SysReminder", func(t *testing.T) {

		//t.Skip("skip test") // remove to run test

		sysReminderRequest := openapiclient.SysReminderRequest{
			CharacterId: "xxx",
			Content:     "test",
			BizUserId:   "1234",
		}

		resp, httpRes, err := apiClient.ChatMessageApiSub.SysReminder(ctx).SysReminderRequest(sysReminderRequest).Execute()

		if err != nil {
			t.Error()
		}
		if resp == nil {
			t.Error()
		}
		if httpRes.StatusCode != 200 {
			t.Error()
		}
	})

}
