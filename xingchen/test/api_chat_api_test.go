/*
XingChen 开放接口定义

Testing ChatApiSubService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package xingchen

import (
	"context"
	openapiclient "github.com/alifanyi/alimt-character-ai-sdk-go/xingchen"
	"io"
	"testing"
)

func Test_xingchen_ChatApiSubService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	configuration.Version = openapiclient.V2
	apiClient := openapiclient.NewAPIClient(configuration)

	bearer := "xxx"
	ctx := context.WithValue(context.Background(), openapiclient.ContextAccessToken, bearer)

	t.Run("Test ChatApiSubService Chat", func(t *testing.T) {

		//t.Skip("skip test") // remove to run test

		chatReqParams := buildChatReqParams()
		resp, httpRes, err := apiClient.ChatApiSub.Chat(ctx).ChatReqParams(chatReqParams).Execute()

		if err != nil {
			t.Error()
		}
		if resp == nil {
			t.Error()
		}
		if httpRes.StatusCode != 200 {
			t.Error()
		}
	})

	t.Run("Test ChatApiSubService stream Chat", func(t *testing.T) {

		//t.Skip("skip test") // remove to run test

		chatReqParams := buildChatReqParams()
		chatReqParams.Streaming = openapiclient.PtrBool(true)
		chatResultStream, err := apiClient.ChatApiSub.Chat(ctx).ChatReqParams(chatReqParams).StreamExecute()

		if err != nil {
			t.Error()
		}

		defer chatResultStream.Close()
		for {
			resp, err := chatResultStream.Recv()
			if err == io.EOF {
				break
			}
			if *resp.Code != int32(200) {
				t.Fatal()
			}
		}
	})
}

func buildChatReqParams() openapiclient.ChatReqParams {
	chatReqParam := openapiclient.ChatReqParams{
		BotProfile: openapiclient.BotProfile{
			CharacterId: openapiclient.PtrString("xxx"),
			Version:     openapiclient.PtrInt32(1),
		},
		ModelParameters: &openapiclient.ModelParameters{
			Seed:        openapiclient.PtrInt64(1683806810),
			TopP:        openapiclient.PtrFloat64(0.8),
			TopK:        openapiclient.PtrInt32(100),
			MaxLength:   openapiclient.PtrInt32(100),
			MinLength:   openapiclient.PtrInt32(50),
			Temperature: openapiclient.PtrFloat64(0.8),
			ModelName:   openapiclient.PtrString("xxx"),
		},
		UserProfile: openapiclient.UserProfile{
			UserId: "1234",
		},
		ChatSamples: []openapiclient.ChatSampleItem{
			{
				Name:    openapiclient.PtrString("小明"),
				Role:    openapiclient.PtrString("user"),
				Content: openapiclient.PtrString("你在干嘛啊"),
			},
			{
				Name:    openapiclient.PtrString("小婉"),
				Role:    openapiclient.PtrString("assistant"),
				Content: openapiclient.PtrString("在想你啊～[[想你]] 你呢？"),
			},
			{
				Name:    openapiclient.PtrString("小明"),
				Role:    openapiclient.PtrString("user"),
				Content: openapiclient.PtrString("我在吃饭呢"),
			},
			{
				Name:    openapiclient.PtrString("小婉"),
				Role:    openapiclient.PtrString("assistant"),
				Content: openapiclient.PtrString("我也是！你看我在吃沙拉～"),
			},
		},
		Messages: []openapiclient.Message{
			{
				Name:    openapiclient.PtrString("小明"),
				Content: openapiclient.PtrString("你叫什么名字"),
				Role:    openapiclient.PtrString("user"),
			},
			{
				Name:    openapiclient.PtrString("小婉"),
				Content: openapiclient.PtrString("我叫小婉啊"),
				Role:    openapiclient.PtrString("assistant"),
			},
			{
				Name:    openapiclient.PtrString("小明"),
				Content: openapiclient.PtrString("你今年多大"),
				Role:    openapiclient.PtrString("user"),
			},
			{
				Name:    openapiclient.PtrString("小婉"),
				Content: openapiclient.PtrString("我今年17岁了"),
				Role:    openapiclient.PtrString("assistant"),
			},
			{
				Name:    openapiclient.PtrString("小明"),
				Content: openapiclient.PtrString("你今年多大"),
				Role:    openapiclient.PtrString("user"),
			},
		},
	}
	return chatReqParam
}
