/*
XingChen 开放接口定义

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xingchen

import (
	"encoding/json"
)

// checks if the GatewayContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayContext{}

// GatewayContext struct for GatewayContext
type GatewayContext struct {
	ServiceType          *string `json:"serviceType,omitempty"`
	FcUrl                *string `json:"fcUrl,omitempty"`
	FlowJsonPath         *string `json:"flowJsonPath,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayContext GatewayContext

// NewGatewayContext instantiates a new GatewayContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayContext() *GatewayContext {
	this := GatewayContext{}
	return &this
}

// NewGatewayContextWithDefaults instantiates a new GatewayContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayContextWithDefaults() *GatewayContext {
	this := GatewayContext{}
	return &this
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *GatewayContext) GetServiceType() string {
	if o == nil || IsNil(o.ServiceType) {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayContext) GetServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *GatewayContext) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *GatewayContext) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetFcUrl returns the FcUrl field value if set, zero value otherwise.
func (o *GatewayContext) GetFcUrl() string {
	if o == nil || IsNil(o.FcUrl) {
		var ret string
		return ret
	}
	return *o.FcUrl
}

// GetFcUrlOk returns a tuple with the FcUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayContext) GetFcUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FcUrl) {
		return nil, false
	}
	return o.FcUrl, true
}

// HasFcUrl returns a boolean if a field has been set.
func (o *GatewayContext) HasFcUrl() bool {
	if o != nil && !IsNil(o.FcUrl) {
		return true
	}

	return false
}

// SetFcUrl gets a reference to the given string and assigns it to the FcUrl field.
func (o *GatewayContext) SetFcUrl(v string) {
	o.FcUrl = &v
}

// GetFlowJsonPath returns the FlowJsonPath field value if set, zero value otherwise.
func (o *GatewayContext) GetFlowJsonPath() string {
	if o == nil || IsNil(o.FlowJsonPath) {
		var ret string
		return ret
	}
	return *o.FlowJsonPath
}

// GetFlowJsonPathOk returns a tuple with the FlowJsonPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayContext) GetFlowJsonPathOk() (*string, bool) {
	if o == nil || IsNil(o.FlowJsonPath) {
		return nil, false
	}
	return o.FlowJsonPath, true
}

// HasFlowJsonPath returns a boolean if a field has been set.
func (o *GatewayContext) HasFlowJsonPath() bool {
	if o != nil && !IsNil(o.FlowJsonPath) {
		return true
	}

	return false
}

// SetFlowJsonPath gets a reference to the given string and assigns it to the FlowJsonPath field.
func (o *GatewayContext) SetFlowJsonPath(v string) {
	o.FlowJsonPath = &v
}

func (o GatewayContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceType) {
		toSerialize["serviceType"] = o.ServiceType
	}
	if !IsNil(o.FcUrl) {
		toSerialize["fcUrl"] = o.FcUrl
	}
	if !IsNil(o.FlowJsonPath) {
		toSerialize["flowJsonPath"] = o.FlowJsonPath
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayContext) UnmarshalJSON(bytes []byte) (err error) {
	varGatewayContext := _GatewayContext{}

	err = json.Unmarshal(bytes, &varGatewayContext)

	if err != nil {
		return err
	}

	*o = GatewayContext(varGatewayContext)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "serviceType")
		delete(additionalProperties, "fcUrl")
		delete(additionalProperties, "flowJsonPath")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayContext struct {
	value *GatewayContext
	isSet bool
}

func (v NullableGatewayContext) Get() *GatewayContext {
	return v.value
}

func (v *NullableGatewayContext) Set(val *GatewayContext) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayContext) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayContext(val *GatewayContext) *NullableGatewayContext {
	return &NullableGatewayContext{value: val, isSet: true}
}

func (v NullableGatewayContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
