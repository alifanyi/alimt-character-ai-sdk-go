/*
XingChen 开放接口定义

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xingchen

import (
	"encoding/json"
)

// checks if the CharacterUpdateDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharacterUpdateDTO{}

// CharacterUpdateDTO 角色更新对象
type CharacterUpdateDTO struct {
	GatewayAddContent *GatewayIssuedParams `json:"gatewayAddContent,omitempty"`
	// 角色名称(最多20个字符)
	Name   string      `json:"name"`
	Avatar *FileInfoVO `json:"avatar,omitempty"`
	// 角色描述
	Introduction string `json:"introduction"`
	// 基本信息
	BasicInformation string `json:"basicInformation"`
	// 开场白
	OpeningLine string `json:"openingLine"`
	// 角色特点
	Traits *string `json:"traits,omitempty"`
	// 聊天示例
	ChatExample *string `json:"chatExample,omitempty"`
	// 角色类型，virtual:虚拟角色，reproduction:已知角色复刻
	Type *string `json:"type,omitempty"`
	// 对话目标
	ChatObjective  *string                  `json:"chatObjective,omitempty"`
	AdvancedConfig *CharacterAdvancedConfig `json:"advancedConfig,omitempty"`
	// 角色ID
	CharacterId string `json:"characterId"`
	// 角色版本
	Version              int32                      `json:"version"`
	PermConfig           *CharacterPermissionConfig `json:"permConfig,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CharacterUpdateDTO CharacterUpdateDTO

// NewCharacterUpdateDTO instantiates a new CharacterUpdateDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharacterUpdateDTO(name string, introduction string, basicInformation string, openingLine string, characterId string, version int32) *CharacterUpdateDTO {
	this := CharacterUpdateDTO{}
	this.Name = name
	this.Introduction = introduction
	this.BasicInformation = basicInformation
	this.OpeningLine = openingLine
	this.CharacterId = characterId
	this.Version = version
	return &this
}

// NewCharacterUpdateDTOWithDefaults instantiates a new CharacterUpdateDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharacterUpdateDTOWithDefaults() *CharacterUpdateDTO {
	this := CharacterUpdateDTO{}
	return &this
}

// GetGatewayAddContent returns the GatewayAddContent field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetGatewayAddContent() GatewayIssuedParams {
	if o == nil || IsNil(o.GatewayAddContent) {
		var ret GatewayIssuedParams
		return ret
	}
	return *o.GatewayAddContent
}

// GetGatewayAddContentOk returns a tuple with the GatewayAddContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetGatewayAddContentOk() (*GatewayIssuedParams, bool) {
	if o == nil || IsNil(o.GatewayAddContent) {
		return nil, false
	}
	return o.GatewayAddContent, true
}

// HasGatewayAddContent returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasGatewayAddContent() bool {
	if o != nil && !IsNil(o.GatewayAddContent) {
		return true
	}

	return false
}

// SetGatewayAddContent gets a reference to the given GatewayIssuedParams and assigns it to the GatewayAddContent field.
func (o *CharacterUpdateDTO) SetGatewayAddContent(v GatewayIssuedParams) {
	o.GatewayAddContent = &v
}

// GetName returns the Name field value
func (o *CharacterUpdateDTO) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CharacterUpdateDTO) SetName(v string) {
	o.Name = v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetAvatar() FileInfoVO {
	if o == nil || IsNil(o.Avatar) {
		var ret FileInfoVO
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetAvatarOk() (*FileInfoVO, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given FileInfoVO and assigns it to the Avatar field.
func (o *CharacterUpdateDTO) SetAvatar(v FileInfoVO) {
	o.Avatar = &v
}

// GetIntroduction returns the Introduction field value
func (o *CharacterUpdateDTO) GetIntroduction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Introduction
}

// GetIntroductionOk returns a tuple with the Introduction field value
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetIntroductionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Introduction, true
}

// SetIntroduction sets field value
func (o *CharacterUpdateDTO) SetIntroduction(v string) {
	o.Introduction = v
}

// GetBasicInformation returns the BasicInformation field value
func (o *CharacterUpdateDTO) GetBasicInformation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BasicInformation
}

// GetBasicInformationOk returns a tuple with the BasicInformation field value
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetBasicInformationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasicInformation, true
}

// SetBasicInformation sets field value
func (o *CharacterUpdateDTO) SetBasicInformation(v string) {
	o.BasicInformation = v
}

// GetOpeningLine returns the OpeningLine field value
func (o *CharacterUpdateDTO) GetOpeningLine() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OpeningLine
}

// GetOpeningLineOk returns a tuple with the OpeningLine field value
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetOpeningLineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpeningLine, true
}

// SetOpeningLine sets field value
func (o *CharacterUpdateDTO) SetOpeningLine(v string) {
	o.OpeningLine = v
}

// GetTraits returns the Traits field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetTraits() string {
	if o == nil || IsNil(o.Traits) {
		var ret string
		return ret
	}
	return *o.Traits
}

// GetTraitsOk returns a tuple with the Traits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetTraitsOk() (*string, bool) {
	if o == nil || IsNil(o.Traits) {
		return nil, false
	}
	return o.Traits, true
}

// HasTraits returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasTraits() bool {
	if o != nil && !IsNil(o.Traits) {
		return true
	}

	return false
}

// SetTraits gets a reference to the given string and assigns it to the Traits field.
func (o *CharacterUpdateDTO) SetTraits(v string) {
	o.Traits = &v
}

// GetChatExample returns the ChatExample field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetChatExample() string {
	if o == nil || IsNil(o.ChatExample) {
		var ret string
		return ret
	}
	return *o.ChatExample
}

// GetChatExampleOk returns a tuple with the ChatExample field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetChatExampleOk() (*string, bool) {
	if o == nil || IsNil(o.ChatExample) {
		return nil, false
	}
	return o.ChatExample, true
}

// HasChatExample returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasChatExample() bool {
	if o != nil && !IsNil(o.ChatExample) {
		return true
	}

	return false
}

// SetChatExample gets a reference to the given string and assigns it to the ChatExample field.
func (o *CharacterUpdateDTO) SetChatExample(v string) {
	o.ChatExample = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CharacterUpdateDTO) SetType(v string) {
	o.Type = &v
}

// GetChatObjective returns the ChatObjective field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetChatObjective() string {
	if o == nil || IsNil(o.ChatObjective) {
		var ret string
		return ret
	}
	return *o.ChatObjective
}

// GetChatObjectiveOk returns a tuple with the ChatObjective field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetChatObjectiveOk() (*string, bool) {
	if o == nil || IsNil(o.ChatObjective) {
		return nil, false
	}
	return o.ChatObjective, true
}

// HasChatObjective returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasChatObjective() bool {
	if o != nil && !IsNil(o.ChatObjective) {
		return true
	}

	return false
}

// SetChatObjective gets a reference to the given string and assigns it to the ChatObjective field.
func (o *CharacterUpdateDTO) SetChatObjective(v string) {
	o.ChatObjective = &v
}

// GetAdvancedConfig returns the AdvancedConfig field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetAdvancedConfig() CharacterAdvancedConfig {
	if o == nil || IsNil(o.AdvancedConfig) {
		var ret CharacterAdvancedConfig
		return ret
	}
	return *o.AdvancedConfig
}

// GetAdvancedConfigOk returns a tuple with the AdvancedConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetAdvancedConfigOk() (*CharacterAdvancedConfig, bool) {
	if o == nil || IsNil(o.AdvancedConfig) {
		return nil, false
	}
	return o.AdvancedConfig, true
}

// HasAdvancedConfig returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasAdvancedConfig() bool {
	if o != nil && !IsNil(o.AdvancedConfig) {
		return true
	}

	return false
}

// SetAdvancedConfig gets a reference to the given CharacterAdvancedConfig and assigns it to the AdvancedConfig field.
func (o *CharacterUpdateDTO) SetAdvancedConfig(v CharacterAdvancedConfig) {
	o.AdvancedConfig = &v
}

// GetCharacterId returns the CharacterId field value
func (o *CharacterUpdateDTO) GetCharacterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CharacterId
}

// GetCharacterIdOk returns a tuple with the CharacterId field value
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetCharacterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CharacterId, true
}

// SetCharacterId sets field value
func (o *CharacterUpdateDTO) SetCharacterId(v string) {
	o.CharacterId = v
}

// GetVersion returns the Version field value
func (o *CharacterUpdateDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CharacterUpdateDTO) SetVersion(v int32) {
	o.Version = v
}

// GetPermConfig returns the PermConfig field value if set, zero value otherwise.
func (o *CharacterUpdateDTO) GetPermConfig() CharacterPermissionConfig {
	if o == nil || IsNil(o.PermConfig) {
		var ret CharacterPermissionConfig
		return ret
	}
	return *o.PermConfig
}

// GetPermConfigOk returns a tuple with the PermConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterUpdateDTO) GetPermConfigOk() (*CharacterPermissionConfig, bool) {
	if o == nil || IsNil(o.PermConfig) {
		return nil, false
	}
	return o.PermConfig, true
}

// HasPermConfig returns a boolean if a field has been set.
func (o *CharacterUpdateDTO) HasPermConfig() bool {
	if o != nil && !IsNil(o.PermConfig) {
		return true
	}

	return false
}

// SetPermConfig gets a reference to the given CharacterPermissionConfig and assigns it to the PermConfig field.
func (o *CharacterUpdateDTO) SetPermConfig(v CharacterPermissionConfig) {
	o.PermConfig = &v
}

func (o CharacterUpdateDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharacterUpdateDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GatewayAddContent) {
		toSerialize["gatewayAddContent"] = o.GatewayAddContent
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	toSerialize["introduction"] = o.Introduction
	toSerialize["basicInformation"] = o.BasicInformation
	toSerialize["openingLine"] = o.OpeningLine
	if !IsNil(o.Traits) {
		toSerialize["traits"] = o.Traits
	}
	if !IsNil(o.ChatExample) {
		toSerialize["chatExample"] = o.ChatExample
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ChatObjective) {
		toSerialize["chatObjective"] = o.ChatObjective
	}
	if !IsNil(o.AdvancedConfig) {
		toSerialize["advancedConfig"] = o.AdvancedConfig
	}
	toSerialize["characterId"] = o.CharacterId
	toSerialize["version"] = o.Version
	if !IsNil(o.PermConfig) {
		toSerialize["permConfig"] = o.PermConfig
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CharacterUpdateDTO) UnmarshalJSON(bytes []byte) (err error) {
	varCharacterUpdateDTO := _CharacterUpdateDTO{}

	err = json.Unmarshal(bytes, &varCharacterUpdateDTO)

	if err != nil {
		return err
	}

	*o = CharacterUpdateDTO(varCharacterUpdateDTO)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "gatewayAddContent")
		delete(additionalProperties, "name")
		delete(additionalProperties, "avatar")
		delete(additionalProperties, "introduction")
		delete(additionalProperties, "basicInformation")
		delete(additionalProperties, "openingLine")
		delete(additionalProperties, "traits")
		delete(additionalProperties, "chatExample")
		delete(additionalProperties, "type")
		delete(additionalProperties, "chatObjective")
		delete(additionalProperties, "advancedConfig")
		delete(additionalProperties, "characterId")
		delete(additionalProperties, "version")
		delete(additionalProperties, "permConfig")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCharacterUpdateDTO struct {
	value *CharacterUpdateDTO
	isSet bool
}

func (v NullableCharacterUpdateDTO) Get() *CharacterUpdateDTO {
	return v.value
}

func (v *NullableCharacterUpdateDTO) Set(val *CharacterUpdateDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCharacterUpdateDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCharacterUpdateDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharacterUpdateDTO(val *CharacterUpdateDTO) *NullableCharacterUpdateDTO {
	return &NullableCharacterUpdateDTO{value: val, isSet: true}
}

func (v NullableCharacterUpdateDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharacterUpdateDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
